@*//*
    * 作成者　:  ルインマー
    * 日付：20200914
    * 機能　：重要タスク画面,重要タスク確定画面
    * 作成したパラメータ：Session["LoginName"]
    *
    */*@
@model koukahyosystem.Models.JyuyoutaskModel

@{
    ViewBag.Title = "TaskNyuuryoku";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <style>

        #table1 th {
            background-color: rgb(189, 233, 242);
            border: 1pt solid black;
        }
        .btn_kakunin {
            margin-top: 0px;
        }


        /*@@media all and (max-width:768px) {

            #table1 td {
                display: inline-block;

            }
        }*/

        .btn_kakunin {
            color: black;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            border: 0.5px solid #555555;
            border-radius: 4px;
        }


        .tab-content {
            height: 66vh;
            overflow: auto;
        }

        .scoll thead th {
            background-color: rgb(189, 233, 242);
            position: -webkit-sticky;
            position: sticky;
            top: 0;
            z-index: 2;
            border: 1pt solid black;
            background-clip: padding-box;
        }

        .t1 {
            border-radius: 5px;
            border-radius: 5px;
            padding: 2px;
            border-color: lightgray;
            border-style: inset;
            border-left-color: ghostwhite;
            border-top-color: ghostwhite;
        }

        .t2 {
            border-radius: 5px;
            border-radius: 5px;
            padding: 2px;
            border-color: lightgray;
            border-style: inset;
            border-left-color: ghostwhite;
            border-top-color: ghostwhite;
            /*min-width: 100px;*/
        }

        .t3 {
            border-radius: 5px;
            border-radius: 5px;
            padding: 2px;
            border-color: lightgray;
            border-style: inset;
            border-left-color: ghostwhite;
            border-top-color: ghostwhite;
        }
        /*.tab-content {
            height: 66vh;
            overflow: auto;
        }*/
        /*.first-col
        {
            position: sticky;
            position: -webkit-sticky;
            left: 0;
            background-color: #fff;
            border: 1pt solid black;
            background-clip: padding-box;
        }

        .second-col {
            position: sticky;
            position: -webkit-sticky;

            background-color: #fff;
            border: 1pt solid black;
            background-clip: padding-box;
        }*/
        #content-desktop {
            display: block;
        }

        /*#content-mobile {
            display: none;
        }*/
        .div_main {
            position: absolute;
            top: 50%;
            left: 50%;
            margin-top: -50px;
            margin-left: -50px;
            width: 100px;
            height: 100px;
            background-color: blue;
            box-shadow: 5px 5px 10px rgb(34, 148, 172);
        }
    </style>
    <style>
       
        @@media  screen and (max-width: 1280px) {
            /*#style_table td {
                display: block;
                width: 100%;
                margin-left:0px;
            }*/
        }
        #d2 {
            padding: 0px;
            width: 350px;
        }

        #d3 {
            padding-left: 0px;
            padding-right: 0px;
            margin-left: 205px;
        }

        #d4 {
            /*// padding-left: 15px;*/
            padding-left: 0px;
            padding-right: 0px;
            /*margin-left: 15px;*/
        }

        #d5 {
            /*margin-top: -40px;*/
            margin-top: 0px;
            margin-right: 0px;
            padding-right: 0px;
        }

        #d6 {
            /*margin-top: -40px;*/
            margin-top: 0px;
            margin-right: 0px;
            padding-right: 0px;
        }

        #save_addrowbtn {
            float: right;
            margin-right: 0px;
            width: 170px;
            padding-left: 0px;
            padding-right: 0px;
        }
        /*.MakeWide {
            width:360px;
            width: 100px;
            display: inline;
            max-width: 100%;
        }*/
        .temadropdown {
            width: 450px;
            /*height: 40px;*/
            margin: 0px;
            max-width: 100%;
        }



        @@media only screen and (max-width: 768px) {
            /*#table1 td {
                border: none;
                display: inline-block;
                width: 100%;
                float: left;
            }*/

            #t1 {
                margin-left: 18px;
            }

            #save {
                padding-left: 0px;
                padding-right: 0px;
                margin-right: 0px;
                margin-left: 0px;
            }

            #b {
                padding-left: 0px;
                padding-right: 0px;
                margin-right: 0px;
                margin-left: 0px;
            }

            #d1 {
                padding-left: 0px;
                padding-right: 0px;
            }

            #d2 {
                padding-left: 0px;
                padding-right: 0px;
                margin-top: 10px;
            }

            #d3 {
                padding-left: 0px;
                padding-right: 0px;
                margin-left: 0px;
            }

            #d4 {
                padding-left: 0px;
                padding-right: 0px;
                margin-right: 0px;
                margin-left: 0px;
                margin-top: 10px;
            }

            #d5 {
                float: left;
                padding-left: 0px;
                padding-right: 0px;
                margin-right: 0px;
                margin-left: 0px;
                margin-top: 20px;
            }

            #d6 {
                float: left;
                padding-left: 0px;
                padding-right: 0px;
                margin-right: 0px;
                margin-left: 0px;
                margin-top: 20px;
            }

            #save_addrowbtn {
                float: left;
                padding-left: 0px;
                padding-right: 0px;
                margin-right: 0px;
                margin-left: 0px;
                margin-top: 10px;
            }
          
        }
      
      
    </style>
    <script>

    </script>
</head>
<body>


    <script type="text/javascript" src=@Url.Content("~/Scripts/jquery-1.12.4.min.js")></script>
    <script>
        $(document).ready(function () {

        });
    </script>

    @if (Session["isAuthenticated"] != null)
    {
    <div id='div_main' class="panel panel-info" style="overflow:auto">
        @using (Html.BeginForm("TaskNyuuryoku", "JyuyouTask", FormMethod.Post))
        {

            <div class="panel-heading" style="background-color: rgb(34, 148, 172); width:100%" align="center">
                <div class="row">
                    <div class="col-sm-12 ">
                        <h4 style="color:white ; display: inline-block;">目標を達成するための重要タスク</h4>
                    </div>

                </div>
            </div>

            @*<div class="row" style="margin: 10px;">*@
            <div class="row" style="margin:10px;">

                <div class="col-xs-3 col-sm-3 " id="d1" style="width:205px;margin-left:0px;">
                    @Html.Label("年度", new { style = "color:black;font-weight: normal !important;margin-right:5px;" })
                    <button class="btn_kakunin" id="btnyesterday" name="btnyesterday" value=@Model.selectyear style="width:29px;height:29px;"><</button>
                    @Html.DropDownListFor(m => m.selectyear, Model.yearList, new { @id = "selectyear",
                    style = "width:70px;Height:22px;",
                   onchange = "return OnChangeddate()"
               })
                    <button class="btn_kakunin" id="btntomorrow" name="btnnext" value=@Model.selectyear style="width:29px;height:29px;">></button>
                </div>
                @*<div class="col-xs-2 col-sm-2 " style="width:248px;padding:0px;">*@
                <div class="col-xs-2 col-sm-2 " id="d2" style="width:517px;padding-left:0px;padding-right:0px;">
                    @Html.Label("テーマ", new { style = "color:black;font-weight: normal !important;margin-right:5px;" })
                    @if (Model.cTEMAList.Count() > 0)
                    {
                        @Html.DropDownListFor(m => m.cTEMA, Model.cTEMAList, new { @class = "temadropdown", autofocus = "autofocus", @id = "cTEMA", style = "", onchange = "return OnChanged()" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.cTEMA, Model.cTEMAList, "", new { @class = "temadropdown ", autofocus = "autofocus", @id = "cTEMA", style = "", onchange = "return OnChanged()" })

                    }
                </div>
                <div class="col-xs-1 col-sm-1" id="d4" style="width:auto;">
                    @if (TempData["Haiten"] != null)
                    {
                        if (@Model.rdo_komoku == "2")
                        {
                            @Html.Label("点数 ", new { id = "status_haitem", style = "color:black;font-weight: normal !important;" })

                        }
                        else
                        {
                            @Html.Label("配点 ", new { id = "status_haitem", style = "color:black;font-weight: normal !important;" })
                        }
                        <label style="color:black;font-weight: normal !important;margin-left:10px;">@TempData["Haiten"].ToString()</label>
                        //  @Html.Label(TempData["Haiten"].ToString(), new { id = "status_haitem1", style = "color:black;font-weight: normal !important;margin-left:10px;" })
                    }
                    @if (TempData["status"] != null)
                    {
                        @Html.Label("点数", new { id = "status_haitem2", style = "color:black;font-weight: normal !important;margin-left:10px;display:" + @Model.visible + ";" })
                        //@Html.Label(TempData["status"].ToString(), new { id = "status_haitem3", style = "color:black;font-weight: normal !important;margin-left:5px;display:" + @Model.visible + ";" })
                        <label style="color:black;font-weight: normal !important;margin-left:5px;display:@Model.visible">@TempData["status"].ToString()</label>
                    }
                </div>
                <div class="col-xs-2 col-sm-2" id="save_addrowbtn" style="">
                    @if (Model.cTEMAList.Count() > 0)
                    {
                        if (Session["expireddate"].ToString() == "yes")
                        {
                            <button class="btn_kakunin" type="submit" id="save" name="save" style="background-color:#9dccf1;cursor:not-allowed;opacity:0.6;text-align:center; width:70px; height:35px; " tabindex="-1" disabled>一時保存</button>

                            <button class="btn_kakunin" type="submit" id="addrow" name="addrow" style="cursor:not-allowed;opacity:0.6;text-align:center ;width:90px; height:35px;margin-left:5px;" tabindex="-1" disabled>タスク追加 </button>


                        }
                        else
                        {
                            <button class="btn_kakunin" type="submit" id="save" name="save" style="background-color:#9dccf1;text-align:center; width:70px; height:35px;">一時保存</button>

                            var addrow_btn_disable = false;

                            if (@Session["jishi_haitem"] != null)
                            {
                                if (@TempData["jishi_haitem"].ToString() != null)
                                {
                                    if (@TempData["jishi_haitem"].ToString() == @TempData["Haiten"].ToString())
                                    {
                                        addrow_btn_disable = true;
                                        <button type="submit" class="btn_kakunin" id="addrow" name="addrow" style="cursor:not-allowed;opacity:0.6;text-align:center ;width:90px; height:35px;margin-left:5px;" tabindex="-1" disabled=@addrow_btn_disable>タスク追加 </button>

                                    }
                                    else
                                    {
                                        addrow_btn_disable = false;
                                        <button class="btn_kakunin" type="submit" id="addrow" name="addrow" style="text-align:center ;width:90px; height:35px;margin-left:5px" disabled=@addrow_btn_disable>タスク追加 </button>

                                    }
                                }
                            }
                            else
                            {
                                addrow_btn_disable = false;
                                <button class="btn_kakunin" type="submit" id="addrow" name="addrow" style="text-align:center ;width:90px; height:35px;margin-left:5px" disabled=@addrow_btn_disable>タスク追加 </button>

                            }


                        }
                    }
                    else
                    {
                        <button class="btn_kakunin" type="submit" id="save" name="save" style="background-color:lightblue;cursor:not-allowed;opacity:0.6;text-align:center; width:70px; height:35px;" tabindex="-1" disabled>一時保存</button>

                        <button class="btn_kakunin" type="submit" id="addrow" name="addrow" style="cursor:not-allowed;opacity:0.6;text-align:center ;width:90px; height:35px;margin-left:5px" tabindex="-1" disabled>タスク追加 </button>

                    }

                </div>

            </div>
            <div class="container" id="tabs" style="margin-top:10px;overflow:auto">
                @if (@Model.cTEMAList.Count() > 0)
                {
                    @*<div class="tab-content">*@


                    <table class="scoll" align="center" cellpadding="6" id="table1">


                        <thead>
                            <tr>
                                <th class="sticky-col first-col" style="display:none;"> </th>
                                <th style="text-align: center;display:none;"></th>
                                <th style="text-align: center;display:none;"></th>
                                <th style="text-align: center;display:none;"></th>
                                <th class="sticky-col second-col" style="text-align: center;display:none;">テーマ内容</th>
                                <th style="text-align: center;display:none;">達成率(％)</th>
                                <th style="text-align: center;display:none;"></th>
                                <th style="text-align: center;display:none;"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.temalist.Count; i++)
                            {
                                var btnName = "";
                                btnName = "上長へ申請";
                                //if (@Model.kubun == "02" || @Model.kubun == "03")
                                //{
                                //    btnName = "上長へ申請";
                                //}
                                //else
                                //{
                                //    btnName = "リーダーへ申請";
                                //}
                                var rowid = i + 1;
                                <tr>
                                    <td style="text-align: center;width:40px;vertical-align:middle" tabindex="-1">
                                        @Model.temalist[i].No
                                    </td>
                                    <td style="display:none">
                                        @Html.TextBoxFor(model => model.temalist[i].Empid)
                                    </td>
                                    <td style="display:none">
                                        @Html.TextBoxFor(model => model.temalist[i].value1)
                                    </td>
                                    <td style="display:none">
                                        @Html.TextBoxFor(model => model.temalist[i].value2)
                                    </td>
                                    <td style="width:430px;">

                                        @Html.Label("実施期間", new { @tabindex = "-1", style = "color:black;font-weight: normal !important;" })
                                        @if (@Model.temalist[i].value2 == "1" || @Model.temalist[i].value1 == "1")
                                        {

                                            <select id=@rowid style="width:90px;" onchange="return OnChangesdate(id)" tabindex="-1" disabled>

                                                @for (int m = 0; m < Model.MonthList.Count; m++)
                                                {
                                                    if (@Model.MonthListValue[m].selectmonthvalue == Model.temalist[i].StartMonth)
                                                    {
                                                        <option selected value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                    else
                                                    {
                                                        <option value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                }

                                            </select>

                                        }
                                        else
                                        {
                                            <select id=@rowid style="width:90px;" onchange="return OnChangesdate(id)">

                                                @for (int m = 0; m < Model.MonthList.Count; m++)
                                                {
                                                    if (@Model.MonthListValue[m].selectmonthvalue == Model.temalist[i].StartMonth)
                                                    {
                                                        <option selected value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                    else
                                                    {
                                                        <option value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                }
                                            </select>

                                        }
                                        @Html.Label("~", new { @tabindex = "-1", style = "" })
                                        @if (@Model.temalist[i].value2 == "1" || @Model.temalist[i].value1 == "1")
                                        {
                                            <select id=@rowid style="width:90px;" onchange="return OnChangeedate(id)" tabindex="-1" disabled>
                                                @for (int m = 0; m < Model.MonthList.Count; m++)
                                                {
                                                    if (@Model.MonthListValue[m].selectmonthvalue == Model.temalist[i].EndMonth)
                                                    {
                                                        <option selected value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                    else
                                                    {
                                                        <option value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                }
                                            </select>

                                        }
                                        else
                                        {
                                            <select id=@rowid style="width:90px;" onchange="return OnChangeedate(id)">
                                                @for (int m = 0; m < Model.MonthList.Count; m++)
                                                {
                                                    if (@Model.MonthListValue[m].selectmonthvalue == Model.temalist[i].EndMonth)
                                                    {
                                                        <option selected value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                    else
                                                    {
                                                        <option value=@Model.MonthListValue[m].selectmonthvalue>@Model.MonthList[m].selectmonth</option>
                                                    }
                                                }
                                            </select>


                                        }
                                        @if (@Model.temalist[i].value2 == "1" || @Model.temalist[i].value1 == "1")
                                        {
                                            <button id="btnclear" name="btnclear" tabindex="-1" style="width:12px;height:12px;background-color:white;padding: 0;border: none;" disabled>
                                                <img src="@Url.Content("~/Img/pic/cancel.jpg")" style="width:100%;margin-bottom:8px; " />
                                            </button>
                                        }
                                        else
                                        {
                                            var clearbtnid = i + 1;
                                            <button id=@clearbtnid name=@clearbtnid onclick="cleardate(id)" style="width:12px;height:12px;background-color:white;padding: 0;border: none;">
                                                <img src="@Url.Content("~/Img/pic/cancel.jpg")" style="width:100% ;margin-bottom:8px;" />
                                            </button>
                                        }
                                        @if (@Model.temalist[i].value2 == "1" || @Model.temalist[i].value1 == "1")
                                        {
                                            <input type="checkbox" id="c" name="c" value="c" onclick="return false" style="margin-left:10px;" tabindex="-1">

                                            @Html.Label("年間", new { @tabindex = "-1", style = "color:black;font-weight: normal !important;margin-right:5px;" })
                                        }
                                        else
                                        {

                                            var k = i + 1;

                                            <input type="checkbox" id="check" name=@k @*value=@k*@ onclick="showreqdate(name)" style="margin-left:10px;">
                                            @Html.Label("年間", new { style = "color:black;font-weight: normal !important;margin-right:5px;" })
                                        }


                                        @if (@Model.temalist[i].value2 == "1" || @Model.temalist[i].value1 == "1")
                                        {
                                            @Html.TextAreaFor(model => model.temalist[i].Name, 5, 60, new
                                       {
                                           @class = "t1",
                                           maxlength = 500,
                                           placeholder = "タスク内容",
                                           rows = "5",
                                           @readonly = "readonly",
                                           @tabindex = "-1",
                                           oninput = "if (this.value != '') this.style.borderColor= '';" +
                                                 "if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",

                                           style = "background-color:whitesmoke;text -align: left; float: right;width:430px;max-width: 100%;margin-top:6px;"
                                       })
                                        }
                                        else
                                        {
                                            @Html.TextAreaFor(model => model.temalist[i].Name, 5, 60, new
                                       {
                                           @class = "t1",
                                           maxlength = 500,
                                           placeholder = "タスク内容",
                                           rows = "5",
                                           oninput = "if (this.value != '') this.style.borderColor= '';" +
                                                "if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",

                                           style = "text -align: left; float: right;width:430px;max-width: 100%;margin-top:6px; "
                                       })
                                        }

                                        @Html.HiddenFor(model => model.temalist[i].StartMonth)
                                        @Html.HiddenFor(model => model.temalist[i].EndMonth)
                                    </td>
                                    @*<td @*style="vertical-align:top;width:102px;">*@
                                    <td style="width:300px;">

                                        @Html.Label("配点", new { @tabindex = "-1", style = "color:black;font-weight: normal !important;margin-bottom:6px;display:" + @Model.visible + ";" })

                                        @if (@Model.temalist[i].value2 == "1" || @Model.temalist[i].value1 == "1")
                                        {
                                            @Html.TextBoxFor(model => model.temalist[i].nHaitem, new
                                       {
                                           @class = " t1 fullwidth_halfwidth",
                                           //@type = "number",
                                           @readonly = true,
                                           @tabindex = "-1",
                                           oninput = "if (this.value != '') this.style.borderColor= '';if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",
                                           style = "background-color:whitesmoke;width:50px;text-align: right;margin-bottom:6px;display:" + @Model.visible + ";"
                                       })
                                        }
                                        else
                                        {
                                            var j = i + 1;
                                            if (TempData["Haiten"] != null)
                                            {
                                                @Html.TextBoxFor(model => model.temalist[i].nHaitem, new
                                           {
                                               @class = " t1 fullwidth_halfwidth",
                                               //@type = "number",
                                               @id=j,
                                               maxlength = 4,
                                               onkeyup = "edValueKeyPress(id)",
                                               onkeypress = "isSpecialKey(event)",
                                               oninput = "edValueKeyPress(id)",
                                               // oninput = "if (this.value != '') this.style.borderColor= '';(!validity.rangeOverflow||(value=999)) && (!validity.rangeUnderflow||(value=1)) &&(!validity.stepMismatch || (value = parseInt(this.value)));if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",
                                               style = "width:50px;text-align: right; margin-bottom:6px;display:" + @Model.visible + ";"
                                           })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.temalist[i].nHaitem, new
                                           {
                                               @class = " t1 fullwidth_halfwidth",
                                               //@type = "number",
                                               @id=j,
                                               maxlength = 4,
                                               @readonly = true,
                                               onkeyup = "edValueKeyPress(id)",
                                               onkeypress = "isSpecialKey(event)",
                                               oninput = "edValueKeyPress(id)",
                                               // oninput = "if (this.value != '') this.style.borderColor= '';(!validity.rangeOverflow||(value=999)) && (!validity.rangeUnderflow||(value=1)) &&(!validity.stepMismatch || (value = parseInt(this.value)));if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",
                                               style = "background-color:whitesmoke;width:50px;text-align: right; margin-bottom:6px;display:" + @Model.visible + ";"
                                           })
                                            }
                                        }




                                        @Html.Label("達成率", new { @tabindex = "-1", style = "color:black;font-weight: normal !important;margin-bottom:6px;margin-left:6px;" })

                                        @Html.TextBoxFor(model => model.temalist[i].result, new
                                   {
                                       @class = " t1 fullwidth_halfwidth",

                                       // @type = "number",
                                       //placeholder = "達成率(％)",
                                       @readonly = "readonly",
                                       @tabindex = "-1",
                                       onkeyup = "edValueKeyPress(j)",
                                       onkeypress = "isSpecialKey(event)",
                                       maxlength = 4,
                                       oninput = "if (this.value != '') this.style.borderColor= '';if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",

                                       style = "background-color:whitesmoke;width:45px;text-align: right; margin-bottom:6px;align:left;"
                                   })

                                        @Html.Label("点数", new { @tabindex = "-1", style = "color:black;font-weight: normal !important;margin-bottom:6px;margin-left:6px;display:" + @Model.visible + ";" })
                                        @Html.TextBoxFor(model => model.temalist[i].nTensu, new
                                   {
                                       @class = " t1 fullwidth_halfwidth",
                                       //@type = "number",
                                       // placeholder = "点数",
                                       @readonly = "readonly",
                                       @tabindex = "-1",
                                       oninput = "if (this.value != '') this.style.borderColor= '';if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",
                                       style = "background-color:whitesmoke;width:55px;text-align: right;margin-bottom:6px;display:" + @Model.visible + ";"
                                   })

                                        @if ((@Model.temalist[i].value2 == "1" && @Model.temalist[i].value1 == "1") || (@Model.temalist[i].value2 == "0" && @Model.temalist[i].value1 == "1"))
                                        {
                                            @Html.TextAreaFor(model => model.temalist[i].memo, new
                                       {
                                           @class = "t3",
                                           placeholder = "実施結果",
                                           maxlength = 500,
                                           rows = "5",
                                           @readonly = "readonly",
                                           @tabindex = "-1",
                                           oninput = "if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",
                                           style = "background-color:whitesmoke;text -align: left;width:300px;"
                                       })
                                        }

                                        else
                                        {
                                            @Html.TextAreaFor(model => model.temalist[i].memo, new
                                       {
                                           @class = "t3",
                                           placeholder = "実施結果",
                                           maxlength = 500,
                                           rows = "5",
                                           oninput = "if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength)",
                                           style = "text-align: left;width:300px;"
                                       })
                                        }

                                    </td>
                                    <td style="display:none">
                                        @Html.TextBoxFor(model => model.temalist[i].kakuninsha)
                                    </td>
                                    <td style="vertical-align:top;">
                                        @if (@Model.temalist[i].value2 == "1" && @Model.temalist[i].value1 == "1")
                                        {
                                            var j = i + 1;
                                            <button class="btncss btn_kakunin" type="button" id="f" name="f" style="cursor:not-allowed;opacity:0.6;margin-right: 0px ;text-align:center;width:100px; height:30px; margin-top: 36px;" tabindex="-1" value="済" disabled> 済</button>
                                        }
                                        else if ((@Model.temalist[i].value2 == "0" || @Model.temalist[i].value2 == null || @Model.temalist[i].value2 == "") && @Model.temalist[i].value1 == "1")
                                        {
                                            var j = i + 1;
                                            <button class="btncss btn_kakunin" type="button" id="f" name="f" style="background-color:#C0E399;cursor:not-allowed;opacity:0.6;margin-right: 0px ;text-align:center;width:100px; height:30px; margin-top: 36px;" tabindex="-1" value="リーダー申請" disabled>@btnName</button>
                                        }
                                        else
                                        {
                                            var j = i + 1;
                                            <button class="btncss btn_kakunin" type='button' id=@j name=@j onclick="sayHello(id)" style="background-color:#C0E399;margin-right: 0px ;text-align:center;width:100px; height:30px; margin-top: 36px;" value="リーダー申請">@btnName</button>

                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>


                    </table>
                    <button type='submit' id="fsave" name="fsave" style="margin-right: 0px ;text-align:center;width:50px; height:30px;visibility:hidden;" value="確定"> 確定</button>

                    @*</div>*@

                }

            </div>
            <button id="btnsearch" name="btnsearch" value="add" style="position: absolute; visibility:hidden">add</button>
            <button id="btntoday" name="btntoday" style="width:29px;height:29px;visibility:hidden">add</button>



            <input type="hidden" id="rowindex" name="rowindex" value="" />
            <input type="hidden" id="upper" name="upper" value=@Model.upper_value>
            <input type="hidden" id="lower" name="lower" value=@Model.lower_value>
        }

        <input type="hidden" id="txt_msg" name="txt_msg" value=@Model.kubun />
        <input type="hidden" id="txt_kisyu" name="txt_kisyu" value=@Model.kisyu_month />
        @if (Model.cTEMAList.Count() > 0)
        {
            <input type="hidden" id="txt_haitem" name="txt_haitem" value=@TempData["Haiten"]>

        }
    </div>


    }
    <script src="@Url.Content("~/Scripts/jquery-1.12.4.min.js")"></script>

    <script>
       
        function sayHello(id) {
            var savemsg;
            var savemsg = document.getElementById('txt_msg').value;
            savemsg = "上長へ申請";
            var btntxt = document.getElementById('table1').rows[id].cells[7].children[0].value;

            document.getElementById('rowindex').value = id;

            var notallow;
            var rowcount = 0;
            var j = 0;
            var n1 = document.getElementById("table1").rows.length;
            var totaltensu = 0;
            if(@Model.rdo_komoku == "1") {
                var comparehaiten = document.getElementById('txt_haitem').value;

                for (var i = 1; i < n1; i++) {
                    var haitem = document.getElementById('table1').rows[i].cells[5].children[1].value;
                    if (haitem.trim().length > 0) {
                        totaltensu += parseInt(haitem);
                    }
                }
            }
            var sdate = document.getElementById('table1').rows[id].cells[4].children[1].value;
            var edate = document.getElementById('table1').rows[id].cells[4].children[3].value;
            var x = document.getElementById('table1').rows[id].cells[4].children[7].value;

            var haitem = document.getElementById('table1').rows[id].cells[5].children[1].value;
            var percent = document.getElementById('table1').rows[id].cells[5].children[3].value;
            var x2 = document.getElementById('table1').rows[id].cells[5].children[6].value;
           
           // removeInvalidChars(id);
            var checkvalue = 0;
            if(@Model.rdo_komoku== "2"){
                if (sdate.trim().length == 0 && edate.trim().length == 0 && x.trim().length == 0) {
                    notallow = "no";
                }
            }
                else {
                    if (sdate.trim().length == 0 && edate.trim().length == 0 && x.trim().length == 0 && haitem.trim().length == 0 && percent.trim().length == 0 && x2.trim().length == 0) {
                        notallow = "no";
                    }
                }
                if(x.trim().length == 0) {
                    checkvalue++;
                }
                else {
                    notallow = "yes";
                }

                if(checkvalue >= 1) {
                    notallow = "no";
            }

                if (notallow == "no") {
                    event.preventDefault();
                    if (x.trim().length == 0){
                        $(document.getElementById('table1').rows[id].cells[4].children[7]).css('borderColor', '#f3172d');
                    }
                    else {
                        $(document.getElementById('table1').rows[id].cells[4].children[7]).css('borderColor', '');
                    }
                }
                else {
                        if (@Model.rdo_komoku== "2") {
                                if (confirm(savemsg + "されます。以降は変更が出来なくなります。 ")) {
                                    $('#fsave').click();
                                }

                                else {
                                    event.preventDefault();

                                }
                        }
                        else {
                            if (id == 12) {

                                    if (totaltensu == comparehaiten) {
                                        if (confirm(savemsg + "されます。以降は変更が出来なくなります。")) {

                                            $('#fsave').click();
                                        }

                                        else {
                                            event.preventDefault();
                                        }
                                    }
                                    else {
                                        alert("テーマ配点「" + comparehaiten + "」をオーバーしています。調整してください。")
                                        event.preventDefault();
                                    }

                            }
                            else {
                                if (totaltensu <= comparehaiten) {

                                        if (confirm(savemsg + "されます。以降は変更が出来なくなります。 ")) {

                                            /// event.preventDefault();
                                            $('#fsave').click();
                                        }

                                        else {
                                            event.preventDefault();

                                        }
                                }
                                else {
                                    alert("テーマ配点「" + comparehaiten + "」をオーバーしています。調整してください。")
                                    event.preventDefault();
                                }
                            }
                        }
                    
                }

        }
      
       
    </script>
    <script>
        function cleardate(id) {
            document.getElementById('table1').rows[id].cells[4].children[1].value = "";
            document.getElementById('table1').rows[id].cells[4].children[3].value = "";
            document.getElementById('table1').rows[id].cells[4].children[8].value = "";
            document.getElementById('table1').rows[id].cells[4].children[9].value = "";
            event.preventDefault();
        }
        function showreqdate(name) {
            var result = document.getElementById('table1').rows[name].cells[4].children[5].checked;
            if (result == true) {
                event.preventDefault();

                var syear = document.getElementById('selectyear').value;
                var start_month = document.getElementById('txt_kisyu').value;
                var start_year = new Date(syear + "/" + start_month + "/01");

                var end_date = new Date(start_year.setMonth(start_year.getMonth() + 11));
                var end_month = end_date.getMonth() + 1;
                var emonth;
                var smonth;
                if (end_month < 10) {
                    emonth = "/0" + end_month;
                }
                else {
                    emonth = "/" + end_month;
                }

                if (start_month < 10) {
                    smonth = "/0" + start_month;
                }
                else {
                    smonth = "/" + start_month;
                }

                document.getElementById('table1').rows[name].cells[4].children[1].value = syear + smonth;
                document.getElementById('table1').rows[name].cells[4].children[8].value = syear + smonth;
                $(document.getElementById('table1').rows[name].cells[4].children[1]).css('borderColor', '');
                document.getElementById('table1').rows[name].cells[4].children[3].value = end_date.getFullYear() + emonth;
                document.getElementById('table1').rows[name].cells[4].children[9].value = end_date.getFullYear() + emonth;
                //document.getElementById('table1').rows[name].cells[4].children[9].value = eyear + "/" + emonth;
                $(document.getElementById('table1').rows[name].cells[4].children[3]).css('borderColor', '');
                event.preventDefault();
            }

            event.preventDefault();
        }

        function OnChangesdate(id) {

            // var selecteddate = document.getElementById('table1').rows[id].cells[4].children[1].value;
            var curdate = new Date(document.getElementById('table1').rows[id].cells[4].children[8].value + "/01");

            //var date1 = document.getElementById('table1').rows[id].cells[4].children[8].value;

            var selecteddate = new Date(document.getElementById('table1').rows[id].cells[4].children[1].value + "/01");
            var selecteddate1 = document.getElementById('table1').rows[id].cells[4].children[1].value;

            var enddate = new Date(document.getElementById('table1').rows[id].cells[4].children[3].value + "/01")
            var enddate1 = document.getElementById('table1').rows[id].cells[4].children[3].value;


            if (selecteddate1.length > 0) {

                if (enddate1.length > 0) {
                    if (selecteddate <= enddate) {
                        document.getElementById('table1').rows[id].cells[4].children[8].value = document.getElementById('table1').rows[id].cells[4].children[1].value;

                    }
                    else {
                        alert("実施開始日を正しい日付に修正して下さい。");
                        var mm = curdate.getMonth() + 1;

                        //var date1 = curdate.getFullYear() + "/" + mm;
                        //alert(date1)
                        var date1 = "";

                        if (mm < 10) {
                            date1 = curdate.getFullYear() + "/0" + mm;
                        }
                        else {
                            date1 = curdate.getFullYear() + "/" + mm;
                        }
                        // alert(date1)
                        document.getElementById('table1').rows[id].cells[4].children[1].value = date1;
                    }
                }
                else {

                    document.getElementById('table1').rows[id].cells[4].children[8].value = document.getElementById('table1').rows[id].cells[4].children[1].value;
                }

            }
            else {

                document.getElementById('table1').rows[id].cells[4].children[8].value = "";
                document.getElementById('table1').rows[id].cells[4].children[1].value = "";
            }


        }
        function OnChangeedate(id) {
            var curdate = new Date(document.getElementById('table1').rows[id].cells[4].children[9].value + "/01");

            var selecteddate = new Date(document.getElementById('table1').rows[id].cells[4].children[3].value + "/01");
            var selecteddate1 = document.getElementById('table1').rows[id].cells[4].children[3].value;

            var startdate = new Date(document.getElementById('table1').rows[id].cells[4].children[1].value + "/01")
            var startdate1 = document.getElementById('table1').rows[id].cells[4].children[1].value;

            if (selecteddate1.length > 0) {
                if (startdate1.length > 0) {

                    if (selecteddate >= startdate) {

                        document.getElementById('table1').rows[id].cells[4].children[9].value = document.getElementById('table1').rows[id].cells[4].children[3].value;

                    }
                    else {
                        alert("実施完了日には開始日以降の日付を指定して下さい。");
                        var mm = curdate.getMonth() + 1;
                        var date1 = "";

                        if (mm < 10) {
                            date1 = curdate.getFullYear() + "/0" + mm;
                        }
                        else {
                            date1 = curdate.getFullYear() + "/" + mm;
                        }
                        document.getElementById('table1').rows[id].cells[4].children[3].value = date1;
                    }
                }
                else {
                    document.getElementById('table1').rows[id].cells[4].children[9].value = document.getElementById('table1').rows[id].cells[4].children[3].value;
                }
            }
            else {

                document.getElementById('table1').rows[id].cells[4].children[9].value = "";
                document.getElementById('table1').rows[id].cells[4].children[3].value = "";
            }
        }
    </script>
    <script>


        function isSpecialKey(evt) {
            var regex = new RegExp("^[0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);

            if (!regex.test(key)) {

                event.preventDefault();
                return false;
            }

        }
        function savemsgshow() {
            alert("社員名を選択してください。")
            event.preventDefault();
        }
        function fsavemsgshow() {
            alert("社員名を選択してください。")
            event.preventDefault();
        }

    </script>
    <script>


    </script>
    <script>
        function roundDown(number, decimals) {
            decimals = decimals || 0;
            return (Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals));
        }
        function edValueKeyPress(id){

            document.getElementById('table1').rows[id].cells[5].children[1].value = document.getElementById('table1').rows[id].cells[5].children[1].value.substring(0, 3);
            document.getElementById('table1').rows[id].cells[5].children[3].value = document.getElementById('table1').rows[id].cells[5].children[3].value.substring(0, 4);
            if (isNaN(document.getElementById('table1').rows[id].cells[5].children[1].value)) {
                document.getElementById('table1').rows[id].cells[5].children[1].value = "";
                document.getElementById('table1').rows[i].cells[5].children[5].value = "";
                return false;
            }
            if (document.getElementById('table1').rows[id].cells[5].children[1].value == "0") {
                document.getElementById('table1').rows[id].cells[5].children[1].value = "1";
            }

            var upper = document.getElementById('upper').value;
            var lower=document.getElementById('lower').value;
            var i = id;
            //var n1 = document.getElementById("table1").rows.length;
            var totaltensu = 0.00;
            //for (var i = 1; i < n1; i++) {
            var haitem = document.getElementById('table1').rows[i].cells[5].children[1].value;
            var percent = document.getElementById('table1').rows[i].cells[5].children[3].value;
            percent = percent.replace("%", "");
            if (isNaN(percent)) {
                document.getElementById('table1').rows[id].cells[5].children[3].value = "";
                document.getElementById('table1').rows[i].cells[5].children[5].value = "";
                return false;
            }
            if (percent > 100) {
                document.getElementById('table1').rows[id].cells[5].children[3].value = "100";
            }
            if (haitem.trim().length > 0 && percent.trim().length > 0 && upper.trim().length > 0 && lower.trim().length > 0) {
                if (percent > 100) {
                    percent = 100;
                }
                //totaltensu = haitem * percent;
                // totaltensu = totaltensu / 100;
                totaltensu = haitem * (percent - lower) / (upper - lower);
                document.getElementById('table1').rows[i].cells[5].children[3].value = percent + "%";
                document.getElementById('table1').rows[i].cells[5].children[5].value = roundDown(totaltensu, 2).toFixed(2);
               // document.getElementById('table1').rows[i].cells[5].children[5].value = parseFloat(totaltensu).toFixed(2);

            }
            else {

                document.getElementById('table1').rows[i].cells[5].children[5].value = "";
                if (percent.trim().length == 0) {
                    document.getElementById('table1').rows[i].cells[5].children[3].value = "";
                }
                if (percent.trim().length > 0) {
                    document.getElementById('table1').rows[i].cells[5].children[3].value = percent + "%";
                }
            }
            if (haitem.trim().length > 0) {
                $(document.getElementById('table1').rows[id].cells[5].children[1]).css('borderColor', '');
            }
            if (percent.trim().length > 0) {
                $(document.getElementById('table1').rows[id].cells[5].children[3]).css('borderColor', '');
            }
        }
        $('#addrow').click(function (event) {

            var tabel = document.getElementsByTagName("table")[0];
            var rows = document.getElementsByTagName("table")[0].rows.length - 1;
            var rows = tabel.rows.length - 1;
            var notallow;
            var j = 0;
            var n1 = document.getElementById("table1").rows.length;
            if (n1 <= 16) {
            }
            else {
                alert("最大追加できるのは16テーマまでです。");
                event.preventDefault();
                for (var i = 1; i < n1; i++) {
                    $(document.getElementById('table1').rows[i].cells[4].children[0]).css('borderColor', '');
                }

            }

        });
        $('#save').click(function (event) {
            if (@Model.rdo_komoku== "2"){
                
            }
            else {
                var n1 = document.getElementById("table1").rows.length;
                //var totaltensu1 = 0.00;
                var totaltensu = 0;
                var comparehaiten = document.getElementById('txt_haitem').value;

                for (var i = 1; i < n1; i++) {
                    var haitem = document.getElementById('table1').rows[i].cells[5].children[1].value;
                    if (haitem.trim().length > 0) {
                        totaltensu += parseInt(haitem);
                    }
                }
             
                    if (totaltensu <= comparehaiten) {

                        //event.preventDefault();
                    }
                    else {
                        alert("テーマ配点「" + comparehaiten + "」をオーバーしています。調整してください。")
                        event.preventDefault();
                    }
                
            }

        });



        function OnChanged(evt) {

            $('#btnsearch').click();
        }
        function OnChangedshainlist(evt) {
            $('#btnshainsearch').click();
        }

        function OnChangeddate(evt) {

            $('#btntoday').click();
        }
    </script>
</body>
</html>
<script type="text/javascript" src=@Url.Content("~/Scripts/jquery-1.12.4.min.js")></script>
<script type="text/javascript" src=@Url.Content("~/Scripts/croppie.js")></script>
<script type="text/javascript" src=@Url.Content("~/Scripts/croppie.min.js")></script>
<link href="~/Content/croppie.css" rel="stylesheet" />

